// Generated by CoffeeScript 1.6.3
(function() {
  var Gamemode, ItemPile;

  ItemPile = require('ItemPile');

  module.exports = function(game, opts) {
    return new Gamemode(game, opts);
  };

  module.exports.pluginInfo = {
    loadAfter: ['voxel-mine', 'voxel-carry', 'voxel-fly', 'voxel-registry']
  };

  Gamemode = (function() {
    function Gamemode(game, opts) {
      var _ref, _ref1;
      this.game = game;
      if (this.game.buttons.down == null) {
        throw 'voxel-gamemode requires game.buttons as kb-bindings (vs kb-controls), cannot add down event listener';
      }
      this.mode = (_ref = opts.startMode) != null ? _ref : 'survival';
      this.registry = (function() {
        var _ref2;
        if ((_ref1 = (_ref2 = this.game.plugins) != null ? _ref2.get('voxel-registry') : void 0) != null) {
          return _ref1;
        } else {
          throw 'voxel-gamemode requires "voxel-registry" plugin';
        }
      }).call(this);
      this.enable();
    }

    Gamemode.prototype.enable = function() {
      var creativeInventoryArray, props, registry, survivalInventoryArray, _i, _len, _ref, _ref1,
        _this = this;
      creativeInventoryArray = [];
      registry = (_ref = this.game.plugins) != null ? _ref.get('voxel-registry') : void 0;
      if (registry != null) {
        _ref1 = registry.blockProps;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          props = _ref1[_i];
          if (props.name != null) {
            creativeInventoryArray.push(new ItemPile(props.name, Infinity));
          }
        }
      }
      survivalInventoryArray = [];
      return this.game.buttons.down.on('gamemode', this.onDown = function() {
        var inventoryHotbar, _ref2, _ref3;
        inventoryHotbar = _this.game.plugins.get('voxel-inventory-hotbar');
        if (_this.mode === 'survival') {
          _this.mode = 'creative';
          _this.game.plugins.enable('voxel-fly');
          if ((_ref2 = _this.game.plugins.get('voxel-mine')) != null) {
            _ref2.instaMine = true;
          }
          _this.survivalInventoryArray = inventoryHotbar.inventory.array;
          if (inventoryHotbar != null) {
            inventoryHotbar.inventory.array = creativeInventoryArray;
          }
          if (inventoryHotbar != null) {
            inventoryHotbar.refresh();
          }
          return console.log('creative mode');
        } else {
          _this.mode = 'survival';
          _this.game.plugins.disable('voxel-fly');
          if ((_ref3 = _this.game.plugins.get('voxel-mine')) != null) {
            _ref3.instaMine = false;
          }
          if (inventoryHotbar != null) {
            inventoryHotbar.inventory.array = survivalInventoryArray;
          }
          if (inventoryHotbar != null) {
            inventoryHotbar.refresh();
          }
          return console.log('survival mode');
        }
      });
    };

    Gamemode.prototype.disable = function() {
      return this.game.buttons.down.removeListener('gamemode', this.onDown);
    };

    return Gamemode;

  })();

}).call(this);
